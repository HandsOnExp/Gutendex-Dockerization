services:
  db:
    extends:
      file: ./postgres-setup/docker-compose.yaml
      service: postgres

  app:
    build:
      context: ./gutendex
      dockerfile: Dockerfile
    container_name: gutendex-app
    environment:
      # Database settings
      - DATABASE_NAME=gutendex
      - DATABASE_USER=gutendex
      - DATABASE_PASSWORD=gutendex_password
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      
      # Django settings
      - DEBUG=true
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - SECRET_KEY=your-secret-key-here
      
      # Static and media files
      - STATIC_ROOT=/app/staticfiles
      - STATICFILES_DIRS=/app/static
      - MEDIA_ROOT=/app/media
      
      # Email settings (dummy values)
      - EMAIL_HOST=dummy.smtp.com
      - EMAIL_HOST_USER=dummy
      - EMAIL_HOST_PASSWORD=dummy
      - EMAIL_HOST_ADDRESS=dummy@example.com
      
      # Admin/Manager settings
      - MANAGER_NAMES=dummy
      - MANAGER_EMAILS=dummy@example.com
      - ADMIN_NAMES=dummy
      - ADMIN_EMAILS=dummy@example.com
      
      # Catalog update flag
      - UPDATE_CATALOG=true
    volumes:
      - static_data:/app/staticfiles
      - static_dirs:/app/static
      - media_data:/app/media
      - catalog_data:/app/catalog_files
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - gutendex_network
    restart: unless-stopped

volumes:
  postgres_data:
    name: gutendex_postgres_data
  static_data:
    name: gutendex_static_data
  static_dirs:
    name: gutendex_static_dirs
  media_data:
    name: gutendex_media_data
  catalog_data:
    name: gutendex_catalog_data

networks:
  gutendex_network:
    name: gutendex_network
    driver: bridge